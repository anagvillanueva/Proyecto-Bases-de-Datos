-- MySQL Script generated by MySQL Workbench
-- Wed Aug  4 17:18:53 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET foreign_key_checks = 0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE DATABASE IF NOT EXISTS `Proyecto_BD2409`;
USE `Proyecto_BD2409`;
-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`Areas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Areas` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Areas` (
  `idAreas` INT NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idAreas`),
  UNIQUE INDEX `Nombre_UNIQUE` (`Nombre` ASC) VISIBLE)
ENGINE = InnoDB;

DELIMITER $$ 
DROP TRIGGER IF EXISTS bi_area $$
CREATE TRIGGER bi_area BEFORE INSERT ON Areas
FOR EACH ROW BEGIN
set NEW.Nombre = upper(NEW.Nombre);
END $$
DELIMITER ;


-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`Artículo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Articulo` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Articulo` (
  `idArticulo` INT NOT NULL,
  `Titulo` VARCHAR(150) NOT NULL,
  `Keywords` VARCHAR(45) NOT NULL,
  `Email` VARCHAR(45) NULL,
  `Publicacion` VARCHAR(45) NOT NULL,
  `idCopia` INT NULL,
  PRIMARY KEY (`idArticulo`),
  INDEX `fk_Articulo_Copia2_idx` (`idCopia` ASC) VISIBLE)
ENGINE = InnoDB;

DELIMITER $$
DROP TRIGGER IF EXISTS bi_articulo $$
CREATE TRIGGER bi_articulo BEFORE INSERT ON Articulo
FOR EACH ROW BEGIN
set NEW.Titulo = upper(NEW.Titulo);
set NEW.Keywords = upper(NEW.Keywords);
set NEW.Publicacion = upper(NEW.Publicacion);
IF(NEW.Publicacion <> 'INFORME TECNICO' AND NEW.Publicacion <> 'ACTA DE CONGRESO' AND NEW.Publicacion <> 'REVISTA') THEN
signal sqlstate'45000' SET MESSAGE_TEXT = 'Forma de publicacion no valida';
END IF;
END $$
DELIMITER ;

-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`Artículo_Autor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Articulo_Autor` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Articulo_Autor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idAutor` INT NOT NULL,
  `idArticulo` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Articulo_Autor_Autor1_idx` (`idAutor` ASC) VISIBLE,
  INDEX `fk_Articulo_Autor_Articulo1_idx` (`idArticulo` ASC) VISIBLE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`Autor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Autor` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Autor` (
  `idAutor` INT NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `ap_paterno` VARCHAR(45) NOT NULL,
  `ap_materno` VARCHAR(45) NOT NULL,
  `RFC` VARCHAR(13) NOT NULL,
  `Email` VARCHAR(45) NULL,
  `Nivel` INT NULL,
  `Grado` VARCHAR(45) NOT NULL,
  `Tema_esp` VARCHAR(45) NOT NULL,
  `idAreas` INT NOT NULL,
  `idInstitucion` INT NOT NULL,
  PRIMARY KEY (`idAutor`),
  UNIQUE INDEX `RFC_UNIQUE` (`RFC` ASC) VISIBLE,
  UNIQUE INDEX `Email_UNIQUE` (`Email` ASC) VISIBLE,
  INDEX `fk_Autor_Areas1_idx` (`idAreas` ASC) VISIBLE,
  INDEX `fk_Autor_Institucion1_idx` (`idInstitucion` ASC) VISIBLE,
  CONSTRAINT `fk_Autor_Areas1`
    FOREIGN KEY (`idAreas`)
    REFERENCES `Proyecto_BD2409`.`Areas` (`idAreas`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Autor_Institucion1`
    FOREIGN KEY (`idInstitucion`)
    REFERENCES `Proyecto_BD2409`.`Institucion` (`idInstitucion`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

DELIMITER $$
DROP TRIGGER IF EXISTS bi_Autor $$
CREATE TRIGGER bi_Autor BEFORE INSERT ON Autor
FOR EACH ROW BEGIN
set NEW.Nombre = upper(NEW.Nombre);
set NEW.ap_paterno = upper(NEW.ap_paterno);
set NEW.ap_materno = upper(NEW.ap_materno);
set NEW.RFC = upper(NEW.RFC);
set NEW.Nivel = upper(NEW.Nivel);
set NEW.Tema_esp = upper(NEW.Tema_esp);
END $$
DELIMITER ;

-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`Congreso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Congreso` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Congreso` (
  `idCongreso` INT NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `Edicion` INT NOT NULL,
  `Ciudad` VARCHAR(45) NOT NULL,
  `Fecha_inicio` DATE NOT NULL,
  `Fecha_final` DATE NOT NULL,
  `TipoCongreso` VARCHAR(45) NOT NULL,
  `Frecuencia` VARCHAR(20) NOT NULL,
  `Costos` INT NOT NULL,
  `idPais` INT NOT NULL,
  PRIMARY KEY (`idCongreso`),
  INDEX `fk_Congreso_Pais1_idx` (`idPais` ASC) VISIBLE,
  CONSTRAINT `fk_Congreso_Pais1`
    FOREIGN KEY (`idPais`)
    REFERENCES `Proyecto_BD2409`.`Pais` (`idPais`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

DELIMITER $$
DROP TRIGGER IF EXISTS bi_congreso $$
CREATE TRIGGER bi_congreso BEFORE INSERT ON Congreso
FOR EACH ROW BEGIN
IF(NEW.Fecha_final <= NEW.Fecha_inicio) THEN
signal sqlstate'45000' SET MESSAGE_TEXT = 'Fecha final no valida';
END IF;
IF(NEW.TipoCongreso = 'NACIONAL') THEN
set NEW.idPais = 1;
END IF;
set NEW.Nombre = upper(NEW.Nombre);
set NEW.Ciudad = upper(NEW.Ciudad);
set NEW.TipoCongreso = upper(NEW.TipoCongreso);
set NEW.Frecuencia = upper(NEW.Frecuencia);
END $$
DELIMITER ;
END $
DELIMITER ;

-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`Congreso_Artículo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Congreso_Articulo` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Congreso_Articulo` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idCongreso` INT NOT NULL,
  `idArticulo` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Congreso_Articulo_Articulo1_idx` (`idArticulo` ASC) VISIBLE,
  INDEX `fk_Congreso_Articulo_Congreso1_idx` (`idCongreso` ASC) VISIBLE,
  CONSTRAINT `fk_Congreso_Articulo_Congreso1`
    FOREIGN KEY (`idCongreso`)
    REFERENCES `Proyecto_BD2409`.`Congreso` (`idCongreso`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Congreso_Articulo_Articulo1`
    FOREIGN KEY (`idArticulo`)
    REFERENCES `Proyecto_BD2409`.`Articulo` (`idArticulo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`Copia`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Copia` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Copia` (
  `idCopia` INT NOT NULL,
  `idInvestigadores` INT NULL,
  `idLab_campus` INT NULL,
  PRIMARY KEY (`idCopia`),
  INDEX `fk_Copia_Investigadores1_idx` (`idInvestigadores` ASC) VISIBLE,
  INDEX `fk_Copia_Lab_campus1_idx` (`idLab_campus` ASC) VISIBLE,
  CONSTRAINT `fk_Copia_Investigadores1`
    FOREIGN KEY (`idInvestigadores`)
    REFERENCES `Proyecto_BD2409`.`Investigadores` (`idInvestigadores`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Copia_Lab_campus1`
    FOREIGN KEY (`idLab_campus`)
    REFERENCES `Proyecto_BD2409`.`Lab_campus` (`idLab_campus`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

DELIMITER $$
DROP TRIGGER IF EXISTS bi_copia $$
CREATE TRIGGER bi_copia BEFORE INSERT ON Copia
FOR EACH ROW BEGIN
IF(NEW.idInvestigadores is null AND NEW.idLab_campus is null) THEN
signal sqlstate'45000' SET MESSAGE_TEXT = 'Por favor indica en donde esta la copia';
END IF;
END $$
DELIMITER ;
-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`GruposInvestigacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Grupos_Investigacion` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Grupos_Investigacion` (
  `idGrupos_Investigacion` INT NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `idAreas` INT NOT NULL,
  PRIMARY KEY (`idGrupos_Investigacion`),
  INDEX `fk_Grupos_Investigacion_Areas1_idx` (`idAreas` ASC) VISIBLE,
  CONSTRAINT `fk_Grupos_Investigacion_Areas1`
    FOREIGN KEY (`idAreas`)
    REFERENCES `Proyecto_BD2409`.`Areas` (`idAreas`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

DELIMITER $$
DROP TRIGGER IF EXISTS bi_Gpo_Inv $$
CREATE TRIGGER bi_Gpo_Inv BEFORE INSERT ON Grupos_Investigacion
FOR EACH ROW BEGIN
set NEW.Nombre = upper(NEW.Nombre);
END $$
DELIMITER ;

-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`InformeTécnico`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Informe_Tecnico` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Informe_Tecnico` (
  `idInforme` INT NOT NULL,
  `Numero_informe` INT NOT NULL,
  `Centro_publicacion` VARCHAR(45) NOT NULL,
  `Fecha` DATE NOT NULL,
  `Costos` INT NOT NULL,
  `idArticulo` INT NOT NULL,
  PRIMARY KEY (`idInforme`),
  UNIQUE INDEX `Numero_informe_UNIQUE` (`Numero_informe` ASC) VISIBLE,
  INDEX `fk_Informe_Tecnico_Articulo1_idx` (`idArticulo` ASC) VISIBLE,
  CONSTRAINT `fk_Informe_Tecnico_Articulo1`
    FOREIGN KEY (`idArticulo`)
    REFERENCES `Proyecto_BD2409`.`Articulo` (`idArticulo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

DELIMITER $$
DROP TRIGGER IF EXISTS bi_Informe_Tecnico $$
CREATE TRIGGER bi_Informe_Tecnico BEFORE INSERT ON Informe_Tecnico
FOR EACH ROW BEGIN
set NEW.Centro_publicacion = upper(NEW.Centro_publicacion);
END $$
DELIMITER ;


-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`Institucion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Institucion` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Institucion` (
  `idInstitucion` INT NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idInstitucion`))
ENGINE = InnoDB;

DELIMITER $$
DROP TRIGGER IF EXISTS bi_Institucion $$
CREATE TRIGGER bi_Institucion BEFORE INSERT ON Institucion
FOR EACH ROW BEGIN
set NEW.Nombre = upper(NEW.Nombre);
END $$
DELIMITER ;

-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`Investigadores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Investigadores` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Investigadores` (
  `idInvestigadores` INT NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `ap_paterno` VARCHAR(45) NOT NULL,
  `ap_materno` VARCHAR(45) NOT NULL,
  `Sexo` VARCHAR(1) NOT NULL,
  `Curp` VARCHAR(18) NOT NULL,
  `idGrupos_Investigacion` INT NOT NULL,
  `idInstitucion` INT NOT NULL,
  PRIMARY KEY (`idInvestigadores`),
  INDEX `fk_Investigadores_Grupos_Investigacion1_idx` (`idGrupos_Investigacion` ASC) VISIBLE,
  INDEX `fk_Investigadores_Institucion1_idx` (`idInstitucion` ASC) VISIBLE,
  CONSTRAINT `fk_Investigadores_Grupos_Investigacion1`
    FOREIGN KEY (`idGrupos_Investigacion`)
    REFERENCES `Proyecto_BD2409`.`Grupos_Investigacion` (`idGrupos_Investigacion`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Investigadores_Institucion1`
    FOREIGN KEY (`idInstitucion`)
    REFERENCES `Proyecto_BD2409`.`Institucion` (`idInstitucion`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

DELIMITER $$
DROP TRIGGER IF EXISTS bi_Investigadores $$
CREATE TRIGGER bi_Investigadores BEFORE INSERT ON Investigadores
FOR EACH ROW BEGIN
set NEW.Nombre = upper(NEW.Nombre);
set NEW.ap_paterno = upper(NEW.ap_paterno);
set NEW.ap_materno = upper(NEW.ap_materno);
set NEW.Sexo = upper(NEW.Sexo);
set NEW.Curp = upper(NEW.Curp);
END $$
DELIMITER ;
-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`Lab_campus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Lab_campus` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Lab_campus` (
  `idLab_campus` INT NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `idInstitucion` INT NOT NULL,
  PRIMARY KEY (`idLab_campus`),
  INDEX `fk_Lab_campus_Institucion1_idx` (`idInstitucion` ASC) VISIBLE,
  CONSTRAINT `fk_Lab_campus_Institucion1`
    FOREIGN KEY (`idInstitucion`)
    REFERENCES `Proyecto_BD2409`.`Institucion` (`idInstitucion`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

DELIMITER $$
DROP TRIGGER IF EXISTS bi_Lab_campus $$
CREATE TRIGGER bi_Lab_campus BEFORE INSERT ON Lab_campus
FOR EACH ROW BEGIN
set NEW.Nombre = upper(NEW.Nombre);
END $$
DELIMITER ;
-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`Pais`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Pais` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Pais` (
  `idPais` INT NOT NULL,
  `Pais` VARCHAR(45) NOT NULL,
  `Pais_ISO` VARCHAR(6) NOT NULL,
  PRIMARY KEY (`idPais`),
  UNIQUE INDEX `Pais_UNIQUE` (`Pais` ASC) VISIBLE,
  UNIQUE INDEX `Pais_ISO_UNIQUE` (`Pais_ISO` ASC) VISIBLE)
ENGINE = InnoDB;

DELIMITER $$
DROP TRIGGER IF EXISTS bi_Pais $$
CREATE TRIGGER bi_Pais BEFORE INSERT ON Pais
FOR EACH ROW BEGIN
set NEW.Pais = upper(NEW.Pais);
set NEW.Pais_ISO = upper(NEW.Pais_ISO);
END $$
DELIMITER ;

-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`Revista`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Revista` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Revista` (
  `idRevistaCientifica` INT NOT NULL,
  `NombreRevista` VARCHAR(45) NOT NULL,
  `Editorial` VARCHAR(45) NOT NULL,
  `Editor` VARCHAR(45) NOT NULL,
  `Numero` INT NOT NULL,
  `Paginas` VARCHAR(45) NOT NULL,
  `Fecha_publicacion` DATE NOT NULL,
  `Fecha_inicio` DATE NOT NULL,
  `Frecuencia` VARCHAR(45) NOT NULL,
  `Costo` INT NOT NULL,
  `idTemas_Revista` INT NOT NULL,
  PRIMARY KEY (`idRevistaCientifica`),
  INDEX `fk_Revista_Temas_Revista1_idx` (`idTemas_Revista` ASC) VISIBLE,
  CONSTRAINT `fk_Revista_TemasRevista1`
    FOREIGN KEY (`idTemas_Revista`)
    REFERENCES `Proyecto_BD2409`.`Temas_Revista` (`idTemas_Revista`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

DELIMITER $$
DROP TRIGGER IF EXISTS bi_Revista $$
CREATE TRIGGER bi_Revista BEFORE INSERT ON Revista
FOR EACH ROW BEGIN
IF(NEW.Fecha_publicacion <= NEW.Fecha_inicio AND NEW.Numero <> 1) THEN
signal sqlstate'45002' SET MESSAGE_TEXT = 'Por favor corroboré las fechas';
END iF;
set NEW.NombreRevista = upper(NEW.NombreRevista);
set NEW.Editorial = upper(NEW.Editorial);
set NEW.Editor = upper(NEW.Editor);
set NEW.Paginas = upper(NEW.Paginas);
set NEW.Frecuencia = upper(NEW.Frecuencia);
END $$
DELIMITER ;

-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`Revista_Artículo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Revista_Articulo` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Revista_Articulo` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idRevistaCientifica` INT NOT NULL,
  `idArticulo` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Revista_Articulo_Articulo1_idx` (`idArticulo` ASC) VISIBLE,
  INDEX `fk_Revista_Articulo_Revista1_idx` (`idRevistaCientifica` ASC) VISIBLE,
  CONSTRAINT `fk_Revista_Articulo_Revista1`
    FOREIGN KEY (`idRevistaCientifica`)
    REFERENCES `Proyecto_BD2409`.`Revista` (`idRevistaCientifica`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Revista_Articulo_Articulo1`
    FOREIGN KEY (`idArticulo`)
    REFERENCES `Proyecto_BD2409`.`Articulo` (`idArticulo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Proyecto_BD2409`.`TemasRevista`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Proyecto_BD2409`.`Temas_Revista` ;

CREATE TABLE IF NOT EXISTS `Proyecto_BD2409`.`Temas_Revista` (
  `idTemas_Revista` INT NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTemas_Revista`))
ENGINE = InnoDB;

DELIMITER $$
DROP TRIGGER IF EXISTS bi_Temas_Revista $$
CREATE TRIGGER bi_Temas_Revista BEFORE INSERT ON Temas_Revista
FOR EACH ROW BEGIN
set NEW.Nombre = upper(NEW.Nombre);
DELIMITER ;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

select trigger_name, event_manipulation, event_object_table, action_statement, trigger_schema
from information_schema.triggers
where trigger_schema = 'Proyecto_BD2409';